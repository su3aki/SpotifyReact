[{"/Users/kiyo/spotifyreact/frontend/src/index.js":"1","/Users/kiyo/spotifyreact/frontend/src/App.js":"2","/Users/kiyo/spotifyreact/frontend/src/components/Pages/Top.js":"3","/Users/kiyo/spotifyreact/frontend/src/components/Organisms/Search.js":"4","/Users/kiyo/spotifyreact/frontend/src/components/Organisms/Header.js":"5","/Users/kiyo/spotifyreact/frontend/src/components/Molecules/Credentials.js":"6","/Users/kiyo/spotifyreact/frontend/src/components/Molecules/QueryTracks.js":"7","/Users/kiyo/spotifyreact/frontend/src/components/Molecules/TrackParams.js":"8","/Users/kiyo/spotifyreact/frontend/src/components/Molecules/TrackCard.js":"9","/Users/kiyo/spotifyreact/frontend/src/components/Molecules/ParamsGraph.js":"10","/Users/kiyo/spotifyreact/frontend/src/components/Molecules/Recommend.js":"11","/Users/kiyo/spotifyreact/frontend/src/components/Molecules/ReTrackParams.js":"12","/Users/kiyo/spotifyreact/frontend/src/components/Atoms/LoadingAnimation.js":"13","/Users/kiyo/spotifyreact/frontend/src/components/Molecules/ArtistParams.js":"14","/Users/kiyo/spotifyreact/frontend/src/components/Atoms/Trail.js":"15","/Users/kiyo/spotifyreact/frontend/src/components/Organisms/Dashboard.js":"16"},{"size":245,"mtime":1616871103627,"results":"17","hashOfConfig":"18"},{"size":311,"mtime":1615897701339,"results":"19","hashOfConfig":"18"},{"size":2401,"mtime":1617006369052,"results":"20","hashOfConfig":"18"},{"size":10830,"mtime":1617105883782,"results":"21","hashOfConfig":"18"},{"size":1017,"mtime":1617081095761,"results":"22","hashOfConfig":"18"},{"size":771,"mtime":1616337586670,"results":"23","hashOfConfig":"18"},{"size":862,"mtime":1616883165355,"results":"24","hashOfConfig":"18"},{"size":671,"mtime":1616351480374,"results":"25","hashOfConfig":"18"},{"size":3224,"mtime":1617081300031,"results":"26","hashOfConfig":"18"},{"size":2550,"mtime":1617104462468,"results":"27","hashOfConfig":"18"},{"size":861,"mtime":1617006434922,"results":"28","hashOfConfig":"18"},{"size":722,"mtime":1616341665526,"results":"29","hashOfConfig":"18"},{"size":6571,"mtime":1616257649653,"results":"30","hashOfConfig":"18"},{"size":727,"mtime":1617006776284,"results":"31","hashOfConfig":"18"},{"size":875,"mtime":1617006346129,"results":"32","hashOfConfig":"18"},{"size":4200,"mtime":1617081094686,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"n23bfk",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kiyo/spotifyreact/frontend/src/index.js",[],["75","76"],"/Users/kiyo/spotifyreact/frontend/src/App.js",[],"/Users/kiyo/spotifyreact/frontend/src/components/Pages/Top.js",[],"/Users/kiyo/spotifyreact/frontend/src/components/Organisms/Search.js",[],"/Users/kiyo/spotifyreact/frontend/src/components/Organisms/Header.js",[],"/Users/kiyo/spotifyreact/frontend/src/components/Molecules/Credentials.js",["77","78"],"import React,{ useEffect }from 'react'\nimport axios from 'axios'\n\nconst Credentials = React.memo((props) => {\n  useEffect(() => {\n    axios(\"https://accounts.spotify.com/api/token\", {\n      method: \"POST\",\n      headers: {\n        Authorization:\n        \"Basic \" + btoa(process.env.REACT_APP_clientId + \":\" + process.env.REACT_APP_clientSecret),\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      data: \"grant_type=client_credentials\"\n    }).then((tokenResponse) => {\n      console.log(\n          \"アクセストークン：\"\n          + tokenResponse.data.access_token)\n          {props.setToken(tokenResponse.data.access_token)}\n    }\n    )\n  }, [])\n  return (\n    <div>\n      { props.setToken }\n    </div>\n  )\n  })\nexport default Credentials;\n","/Users/kiyo/spotifyreact/frontend/src/components/Molecules/QueryTracks.js",["79"],"import React,{ useEffect }from 'react'\nimport axios from 'axios'\n\nconst QueryTracks = React.memo((props) => {\n  useEffect(() => {\n    //曲名単語検索\n    axios(`https://api.spotify.com/v1/search?query=${props.wordFormData}&type=track&limit=20`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + props.token,\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\"},\n    })\n      .then((trackContentsResponse) => {\n        props.setItemResult(trackContentsResponse.data.tracks.items)\n        console.log(\"🔻トラック検索結果：\" + props.wordFormData)\n        console.log(trackContentsResponse.data)\n      })\n      .catch((err) => {\n        console.log(\"err:\", err)\n      })\n  }, [props.wordFormData]\n  )\n  return (\n    <div>\n      { props.setItemResult }\n    </div>\n  )\n})\nexport default QueryTracks;\n","/Users/kiyo/spotifyreact/frontend/src/components/Molecules/TrackParams.js",["80"],"import React, { useEffect } from 'react'\nimport axios from 'axios'\n\nconst TrackParams = (props) => {\n  useEffect(() => {\n    //曲IDからトラックパラメータ取得\n    axios(`https://api.spotify.com/v1/audio-features/${props.id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + props.token,\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\"}\n    }).then((trackInfoResponse) => {\n      props.setTrackInfo(trackInfoResponse)\n    })\n    .catch((err) => {\n        console.log(\"err:\", err)\n      })\n  }, [props.id])\n  return (\n    <div>\n      { props.setTrackInfo }\n    </div>\n  )\n}\nexport default TrackParams;\n","/Users/kiyo/spotifyreact/frontend/src/components/Molecules/TrackCard.js",["81"],"import React, { useState } from 'react'\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ReactHowler from 'react-howler'\nimport {ReactComponent as Logo } from '../Atoms/SpotifyLogo.svg'\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\n\nconst TrackCard = (props) => {\n\n  const [playing, setPlaying] = useState(false)\n  const Volume = (props.volumeToggle)\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n      backgroundColor: \"#1e1022\",\n      color: \"#ff87d6\",\n      padding: 0,\n      height: 150\n    },\n    details: {\n      width: 'calc(100% - 160px)',\n      height: 150,\n        \"&:last-child\": {\n          height: 80\n        }\n    },\n    content: {\n      textOverflow: \"ellipsis\",\n      overflow: \"hidden\",\n      whiteSpace: \"nowrap\",\n      paddingLeft: 10,\n        \"&:last-child\": {\n          padding: 10\n        }\n      },\n      cover: {\n        width: 150,\n        height: 150\n      },\n      link: {\n        paddingTop: -10\n      },\n      playButton: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n      },\n      subtitle: {\n        color: \"#a699a2\",\n      },\n    }\n  ));\n  const classes = useStyles();\n  const theme = useTheme()\n  return (\n    <div>\n      <Card className={classes.root} elevation={2}>\n        <CardMedia onClick={() => setPlaying((state) => !state)}\n          className={classes.cover}\n          image={props.artworkUrl}/>\n        <div className={classes.details} >\n          <CardContent className={classes.content}>\n            <Typography component=\"h6\" variant=\"h6\">\n              {props.trackName}\n            </Typography>\n            <div className={classes.subtitle}>\n              <div className={classes.spotifyButton}>\n            </div>\n          <Typography variant=\"subtitle1\">\n            {props.artistName}\n              </Typography>\n            </div>\n            <div className={classes.playButton}>\n            <Logo onClick={() => { window.open(props.spotifyUrl) }}/>\n            {props.previewUrl !== 0\n              && props.previewUrl !== null\n              ?<>\n                <ReactHowler\n                format=\"mp3\"\n                playing={playing}\n                src={props.previewUrl}\n                volume={Volume}\n                />\n                {playing\n                  ? <PauseCircleOutlineIcon style={{ color: \"#ff006e\",fontSize: 40 }}\n                    onClick={() => setPlaying(false)} />\n                  : <PlayCircleOutlineIcon style={{ color: \"#1db954\",fontSize: 40 }}\n                    onClick={() => setPlaying(true)} />\n                }\n                </>\n                : <NotInterestedIcon style={{ color: \"#FFF\", fontSize:40 }}/>\n              }</div>\n          </CardContent>\n        </div>\n        </Card>\n        </div>\n  );\n}\nexport default TrackCard;\n","/Users/kiyo/spotifyreact/frontend/src/components/Molecules/ParamsGraph.js",["82","83"],"import React from 'react'\nimport { Radar } from 'react-chartjs-2'\nimport Grid from '@material-ui/core/Grid'\n\nconst ParamsGraph = React.memo((props) => {\n  const ShrinkedPopularity = props.FirstPopularity * 0.01\n  const ShrinkedLoudness = (props.FirstLoudness + 70) * 0.01\n  const ShrinkedTempo = props.FirstTempo * 0.005\n\n  const ReShPopularity = props.RePopularity * 0.01\n  const ReShLoudness = (props.ReLoudness + 70) * 0.01\n  const ReShTempo = props.ReTempo * 0.005\n\n  const data = {\n    labels: ['人気度', 'テンポ', 'ラウドネス', '明るさ', '踊りやすさ', 'エナジー'],\n    datasets: [\n      {\n        label: props.trackName,\n        backgroundColor: 'rgba(29,185,84,0.7)',\n        borderColor: '#1db954',\n        borderWidth: 1,\n        pointBackgroundColor: '#1db954',\n        pointBorderColor: '#1db954',\n        pointHitRadius: '3',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: '#1db954',\n        pointRadius: 0,\n        data: [ShrinkedPopularity, ShrinkedTempo, ShrinkedLoudness, props.FirstValence, props.FirstDanceAbility, props.FirstEnergy]\n      },\n      {\n        label: props.reTrackName,\n        backgroundColor: 'rgba(219,93,254,0.4)',\n        borderColor: '#db5dfe',\n        borderWidth: 1,\n        pointBackgroundColor: '#db5dfe',\n        pointBorderColor: '#db5dfe',\n        pointHitRadius: '3',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: '#db5dfe',\n        pointRadius: 0,\n        data: [ReShPopularity, ReShTempo, ReShLoudness, props.ReValence, props.ReDanceAbility, props.ReEnergy]\n        }\n    ]\n  }\n  const myOptions = {\n    layout: {\n      padding: 30\n    },\n    scale: {\n      angleLines: {\n        color: 'rgba(252,252,255,0.1)'\n      },\n      gridLines: {\n        color: ['#DF0869'],\n        drawBorder: true,\n      },\n      pointLabels :{\n        fontSize: 15,\n      },\n      ticks: {\n        display: false,\n        maxTicksLimit: 1,\n      }\n    }\n  }\n  return (\n    <div>\n      <Grid container direction=\"row\">\n        {(props.FirstArtwork).length !== 0\n          &&<Grid item xs={6} sm={2}>\n          <img src={props.FirstArtwork}\n          width=\"200\" height=\"200\"/>\n        </Grid>\n        }\n        {(props.ReArtwork).length !==0\n          && <Grid item xs={6} sm= {2}>\n          <img src={props.ReArtwork}\n          width=\"200\" height=\"200\"/>\n      </Grid>\n        }\n      </Grid>\n        <Radar data={data}\n          options={myOptions}\n          width={600}\n          height={600} />\n    </div>\n  )\n})\nexport default ParamsGraph;\n","/Users/kiyo/spotifyreact/frontend/src/components/Molecules/Recommend.js",["84"],"import React, { useEffect } from 'react'\nimport axios from 'axios'\n\nconst Recommend = (props) => {\n  console.log(props.artistGenres)\n  useEffect(() => {\n    //曲IDからトラックパラメータ取得\n    axios(`https://api.spotify.com/v1/recommendations?limit=10&seed_artists=${props.artistId}&seed_genres=${props.artistGenres}&seed_tracks=${props.trackId}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + props.token,\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\"}\n    }).then((recommendResponse) => {\n      props.setLookRecommend(recommendResponse.data.tracks)\n      console.log(recommendResponse.data)\n    })\n    .catch((err) => {\n        console.log(\"err:\", err)\n      })\n  }, [props.trackId])\n  return (\n    <div>\n      { props.setLookRecommend }\n    </div>\n  )\n\n}\nexport default Recommend;\n","/Users/kiyo/spotifyreact/frontend/src/components/Molecules/ReTrackParams.js",["85"],"import React, { useEffect } from 'react'\nimport axios from 'axios'\n\nconst ReTrackParams = (props) => {\n  useEffect(() => {\n    //曲IDからトラックパラメータ取得\n    axios(`https://api.spotify.com/v1/audio-features/${props.id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + props.token,\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\"}\n    }).then((reTrackInfoResponse) => {\n      props.setReTrackInfo(reTrackInfoResponse)\n      console.log(reTrackInfoResponse)\n    })\n    .catch((err) => {\n        console.log(\"err:\", err)\n      })\n  }, [props.id])\n  return (\n    <div>\n      { props.setReTrackInfo }\n    </div>\n  )\n}\nexport default ReTrackParams;\n","/Users/kiyo/spotifyreact/frontend/src/components/Atoms/LoadingAnimation.js",[],"/Users/kiyo/spotifyreact/frontend/src/components/Molecules/ArtistParams.js",["86"],"import React, { useEffect } from 'react'\nimport axios from 'axios'\n\nconst ArtistParams = React.memo((props) => {\n  useEffect(() => {\n    //受け取ったアーティストIDから\n    axios(`https://api.spotify.com/v1/artists/${props.artistId}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + props.token,\n        Accept: \"application/json\",\n        \"Content-type\": \"application/json\"}\n    }).then((artistResponse) => {\n      props.setArtistInfo(artistResponse.data)\n      console.log(artistResponse.data)\n    })\n    .catch((err) => {\n        console.log(\"err:\", err)\n      })\n  }, [props.artistId])\n  return (\n    <div>\n      { props.setArtistInfo }\n    </div>\n  )\n})\nexport default ArtistParams;\n","/Users/kiyo/spotifyreact/frontend/src/components/Atoms/Trail.js",[],"/Users/kiyo/spotifyreact/frontend/src/components/Organisms/Dashboard.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":18,"column":11,"nodeType":"93","messageId":"94","endLine":18,"endColumn":60},{"ruleId":"95","severity":1,"message":"96","line":21,"column":6,"nodeType":"97","endLine":21,"endColumn":8,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"96","line":22,"column":6,"nodeType":"97","endLine":22,"endColumn":26,"suggestions":"99"},{"ruleId":"95","severity":1,"message":"96","line":19,"column":6,"nodeType":"97","endLine":19,"endColumn":16,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":60,"column":9,"nodeType":"103","messageId":"104","endLine":60,"endColumn":14},{"ruleId":"105","severity":1,"message":"106","line":71,"column":11,"nodeType":"107","endLine":72,"endColumn":37},{"ruleId":"105","severity":1,"message":"106","line":77,"column":11,"nodeType":"107","endLine":78,"endColumn":37},{"ruleId":"95","severity":1,"message":"96","line":21,"column":6,"nodeType":"97","endLine":21,"endColumn":21,"suggestions":"108"},{"ruleId":"95","severity":1,"message":"96","line":20,"column":6,"nodeType":"97","endLine":20,"endColumn":16,"suggestions":"109"},{"ruleId":"95","severity":1,"message":"96","line":20,"column":6,"nodeType":"97","endLine":20,"endColumn":22,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["113"],["114"],["115"],"no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["116"],["117"],["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"123","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [props]",{"range":"130","text":"131"},"Update the dependencies array to be: [props, props.wordFormData]",{"range":"132","text":"133"},"Update the dependencies array to be: [props, props.id]",{"range":"134","text":"135"},"Update the dependencies array to be: [props, props.trackId]",{"range":"136","text":"137"},{"range":"138","text":"135"},"Update the dependencies array to be: [props, props.artistId]",{"range":"139","text":"140"},[655,657],"[props]",[708,728],"[props, props.wordFormData]",[536,546],"[props, props.id]",[718,733],"[props, props.trackId]",[583,593],[585,601],"[props, props.artistId]"]