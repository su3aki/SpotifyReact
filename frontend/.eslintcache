[{"/Users/kiyo/spotifyreact/frontend/src/index.js":"1","/Users/kiyo/spotifyreact/frontend/src/App.js":"2","/Users/kiyo/spotifyreact/frontend/src/components/Search.js":"3","/Users/kiyo/spotifyreact/frontend/src/components/GetParams.js":"4"},{"size":219,"mtime":1613760134278,"results":"5","hashOfConfig":"6"},{"size":3485,"mtime":1614175061145,"results":"7","hashOfConfig":"6"},{"size":1084,"mtime":1614183698242,"results":"8","hashOfConfig":"6"},{"size":724,"mtime":1614180734724,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"n23bfk",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kiyo/spotifyreact/frontend/src/index.js",[],["20","21"],"/Users/kiyo/spotifyreact/frontend/src/App.js",["22"],"import React, { useState, useEffect } from 'react'\nimport axios from \"axios\"\nimport Button from '@material-ui/core/Button'\nimport Search from './components/Search'\nimport './App.css'\n\nconst App = () => {\n  const [token, setToken] = useState(\"\")\n  const [resultWordSearch, setResultWordSearch] = useState({\n    artistsName: \"\",\n    artistsImg: \"\"\n  })\n  const [wordFormData, setWordFormData] = useState(\"\")\n  const [SearchFormData, setSearchFormData] = useState(\"\")\n  //アクセストークン取得\n  useEffect(() => {\n    axios(\"https://accounts.spotify.com/api/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        'Authorization':\n          \"Basic \" + btoa(process.env.REACT_APP_clientId + \":\" + process.env.REACT_APP_clientSecret)\n      },\n      data: \"grant_type=client_credentials\"\n    }).then((tokenResponse) => {\n      setToken(tokenResponse.data.access_token)\n      console.log(\n        \"アクセストークン：\"\n        + tokenResponse.data.access_token)\n    })\n  }, [])\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (wordFormData === \"\") {\n      alert(\"入力してください\");\n    }\n  }\n  //単語検索ボタンの機能\n  //SearchFormに入力された単語を元にアーティスト名を取得\n  const addSearchFormData = (event) => {\n    setResultWordSearch([])\n    event.preventDefault()\n    console.log('RUN WORD Search', event.target)\n    axios(`https://api.spotify.com/v1/search?q=${SearchFormData}&type=artist&limit=3`, {\n      method: \"GET\",\n      headers: {\n        'Authorization': \"Bearer \" + token\n      },\n    }).then((artistsResponse) => {\n      console.log(artistsResponse.data)\n      //検索結果を変数に登録\n      setResultWordSearch({\n        artistsName: artistsResponse.data.artists.items[0].name,\n        artistsImg: artistsResponse.data.artists.items[0].images[0].url\n      })\n      console.log(artistsResponse.data)\n    })\n    setSearchFormData('')\n  }\n  //Searchform中身の変更内容取得\n  const handleSearchFormChange = (event) => {\n    console.log(event.target.value)\n    setSearchFormData(event.target.value)\n  }\n  /*\n  //アーティストのIDからアルバム取得\n  const trackView = (id) => {\n    axios(\n      `https://api.spotify.com/v1/artists/${id}/albums?market=ES&limit=10`,\n      {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \" + token\n        },\n      }).then((tracksReaponse) => {\n        setAlbums(tracksReaponse.data.items)\n        console.log()\n      })\n  }\n  */\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h2>Search Track by query</h2>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              value={wordFormData}\n              placeholder=\"Track name?\"\n              onChange={(e) => setWordFormData(e.target.value)}\n            />\n          </form>\n          <Search token={token} wordFormData={wordFormData}/>\n        <h2>Search Artists by query</h2>\n          <form onSubmit={addSearchFormData}>\n            <input\n              value={SearchFormData}\n              onChange={handleSearchFormChange}\n            />\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">GO!</Button>\n          </form>\n          <p>Artists Result:{resultWordSearch.artistsName}</p>\n          <img src={resultWordSearch.artistsImg}></img>\n        </div>\n        </div>\n\n    )\n  }\nexport default App;\n","/Users/kiyo/spotifyreact/frontend/src/components/Search.js",["23"],"/Users/kiyo/spotifyreact/frontend/src/components/GetParams.js",["24"],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":103,"column":11,"nodeType":"31","endLine":103,"endColumn":50},{"ruleId":"32","severity":1,"message":"33","line":3,"column":8,"nodeType":"34","messageId":"35","endLine":3,"endColumn":17},{"ruleId":"32","severity":1,"message":"36","line":5,"column":10,"nodeType":"34","messageId":"35","endLine":5,"endColumn":21},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'GetParams' is defined but never used.","Identifier","unusedVar","'trackParams' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]